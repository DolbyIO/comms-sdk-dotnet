name: Package Artifacts
on: workflow_dispatch

jobs:
  build-runtimes:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            sdk: cppsdk-2.3.0-alpha.2-macos64.zip
            shell: bash
            runtime: DolbyIO.Comms.Sdk.Runtime.Osx
          - os: windows-latest
            sdk: cppsdk-2.3.0-alpha.2-windows64.zip
            shell: powershell
            runtime: DolbyIO.Comms.Sdk.Runtime.Win
    
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/configure
        with:
          cpp-sdk: ${{ matrix.sdk }}
          shell: ${{ matrix.shell }}

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: cmake --build . -t DolbyIO.Comms.Native

      - name: Pack
        working-directory: ${{github.workspace}}/build
        run: dotnet pack dotnet/${{ matrix.runtime }}/${{ matrix.runtime }}.csproj

      - uses: actions/upload-artifact@v3
        with:
          name: nugets
          path: ${{github.workspace}}/build/bin/${{ matrix.runtime }}.*.nupkg

  build-packages:
    runs-on: macos-latest
    needs: [build-runtimes]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/configure
        with:
          cpp-sdk: cppsdk-2.3.0-alpha.2-macos64.zip
      - uses: actions/download-artifact@v3
        with:
          name: nugets
          path: ${{ github.workspace }}/build/bin
      
      - run: cmake --build .
        working-directory: ${{github.workspace}}/build

      - run: dotnet pack dotnet/DolbyIO.Comms.Sdk/DolbyIO.Comms.Sdk.csproj
        working-directory: ${{github.workspace}}/build

      - name: Sign Nugets
        working-directory: ${{github.workspace}}/build/bin
        run: |
          echo "${{ secrets.WINDOWS_CERTIFICATE }}" | base64 --decode > certificate.pfx
          dotnet nuget sign DolbyIO.Comms.Sdk.*.nupkg --certificate-path ./certificate.pfx --certificate-password ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD}} --timestamper http://timestamp.digicert.com/
          rm certificate.pfx

      - uses: actions/upload-artifact@v3
        with:
          name: nugets
          path: ${{github.workspace}}/build/bin/DolbyIO.Comms.Sdk.*.nupkg
      
      - run: rm ${{github.workspace}}/build/unity/Runtime/*.dylib
        working-directory: ${{github.workspace}}/build

      - run: 7z x "${{github.workspace}}/build/bin/DolbyIO.Comms.Sdk.Runtime.*.nupkg" -o${{github.workspace}}/build/unity/Runtime "runtimes/*"
        working-directory: ${{github.workspace}}/build

      - run: mv ${{github.workspace}}/build/unity/Runtime/runtimes ${{github.workspace}}/build/unity/Runtime/lib
        working-directory: ${{github.workspace}}/build

      - uses: actions/upload-artifact@v3
        with:
          name: unity
          path: ${{github.workspace}}/build/unity/

      - run: dotnet publish dotnet/DolbyCMD/DolbyCMD.csproj -o CmdLine
        working-directory: ${{github.workspace}}/build

      - uses: actions/upload-artifact@v3
        with:
          name: CmdLine
          path: ${{github.workspace}}/build/CmdLine/

